def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg20, arg21):
    def func5(arg22, arg23):
        var24 = arg20 | arg22 + arg23
        result = ((arg22 - (arg22 - arg23) - (arg22 - (arg20 | (1778477155 & var24) ^ arg20 | var24 & var24))) - var24) & var24
        return result
    var25 = func5(arg21, arg20)
    var33 = var28(arg21, var25)
    var38 = func9(var25, var33)
    if arg21 < var33:
        var43 = class10()
    else:
        var43 = class12()
    for var44 in range(13):
        var43.func11(arg20, var38)
    var45 = arg21 & arg21
    var46 = var38 & var38
    var47 = -1730832536 | arg21 & arg20
    var48 = (var33 - arg20) ^ var25
    var49 = var33 - (var25 - var46)
    var50 = 259 & 184
    var51 = var38 ^ arg21 - var47 + var49
    var52 = var46 + var25 | var51 + var51
    var53 = arg20 + (-572 ^ (var38 + var48))
    var54 = var47 ^ var25
    if var53 < var46:
        var55 = var38 - var53 + var38 & arg20
    else:
        var55 = 641 + var47
    var56 = var45 ^ var48
    var57 = var25 ^ var56
    var58 = var48 ^ arg20
    var59 = var53 & var51
    var60 = var38 - arg20
    result = var57 & var54
    return result
class class12(object):
    def func11(self, arg41, arg42):
        result = 0 ^ -540640798
        return result
class class10(class12):
    def func11(self, arg39, arg40):
        result = ((((-1 ^ arg39) | -761097637) - 1) | arg39) - 1 | 1046090974
        return result
def func9(arg34, arg35):
    var36 = 0
    for var37 in range(21):
        var36 += (var37 + -1) ^ -3
    return var36
def func8(arg29, arg30):
    var31 = arg29 - ((((arg30 ^ -432 + 1346087470 - (arg30 - arg29)) + -821 | arg30) + 94834565 ^ arg30 - -1780785352) ^ (arg30 + (((arg29 ^ (((-532 & 2020067431) - arg30) & arg30)) - -1399127226) - arg29) | arg29 & arg29) - arg29)
    var32 = 954185072 & arg30 - 28775152
    result = (var31 | (arg30 - var31)) & arg30
    return result
def func7():
    closure = [-6]
    def func6(arg26, arg27):
        closure[0] += func8(arg26, arg27)
        return closure[0]
    func = func6
    return func
var28 = func7()
def func1(arg1, arg2):
    var6 = func2(arg2, arg1)
    var7 = arg1 | arg1 & var6 & var6
    var8 = arg1 + arg1 - arg1
    var9 = arg1 + (1436610692 - 712 ^ var8)
    if var9 < var8:
        var10 = ((var7 & -1501148574) - arg1) - arg1
    else:
        var10 = 2102351469 + var6
    var11 = (var6 | arg2) & var6 & arg2
    var12 = (var8 & var11) & var9 ^ 965
    var13 = var9 & var9 - var11
    var14 = ((var13 + arg2) ^ var12) & -965
    var15 = var7 & (var13 ^ -916) ^ var6
    var16 = var9 & var13
    var17 = var12 + (161 & arg2) ^ var11
    var18 = var9 & 95
    var19 = var7 & 696198852 ^ var18
    result = ((var15 ^ var8 ^ (var19 ^ var19 ^ var14) - ((var18 ^ var14) & var9 + arg1) & 53268217) & var14) + var14
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var5 = 9 & 0 & acc
        if acc == 0:
            return var5
        else:
            result = func3(acc - 1, var5)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 4'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 61'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
